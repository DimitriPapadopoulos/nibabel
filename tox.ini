[tox]
requires =
    tox>=4
envlist = py3{8,9,10,11,12}{,-pre},doctest,style,typecheck

[testenv]
description = Typical pytest invocation with coverage
pip_pre =
  py3{8,9,10,11,12}-pre: true
deps =
  pytest
  pytest-doctestplus
  pytest-cov
  pytest-httpserver
  pytest-xdist
commands =
  pytest --doctest-modules --doctest-plus \
    --cov nibabel --cov-report xml:cov.xml \
    --junitxml test-results.xml \
    --pyargs nibabel {posargs:-n auto}

[testenv:docs]
description = Typical pytest invocation with coverage
allowlist_externals = make
deps =
  sphinx
  matplotlib>=1.5.3
  numpydoc
  texext
  tomli; python_version < "3.11"
commands =
  make -C doc html

[testenv:doctest]
description = Typical pytest invocation with coverage
allowlist_externals = make
depends = docs
deps =
  sphinx
  pytest
  matplotlib>=1.5.3
  numpydoc
  texext
  tomli; python_version < "3.11"
commands =
  make -C doc doctest

[testenv:style]
description = Check our style guide
deps =
  flake8
  blue
  isort[colors]
skip_install = true
commands =
  blue --diff --color nibabel
  isort --diff --color nibabel
  flake8 nibabel

[testenv:style-fix]
description = Auto-apply style guide to the extent possible
deps =
  blue
  isort[colors]
skip_install = true
commands =
  blue nibabel
  isort nibabel

[testenv:typecheck]
description = Check type consistency
deps =
  mypy
  pytest
  types-setuptools
  types-Pillow
  pydicom
  numpy
  pyzstd
  importlib_resources
skip_install = true
commands =
  mypy nibabel

[testenv:build{,-strict}]
deps =
  build
  twine
skip_install = true
set_env =
  build-strict: PYTHONWARNINGS=error
commands =
  python -m build
  python -m twine check dist/*

[testenv:publish]
depends = build
deps =
  twine
skip_install = true
commands =
  python -m twine upload dist/*
